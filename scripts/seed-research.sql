-- Clear existing research data
DELETE FROM research;

-- Insert sample research data
INSERT INTO research (title, slug, excerpt, content, image, published, type, authors, publication_year, journal_name, doi, pdf_url, external_url, keywords, abstract) VALUES
('Machine Learning Approach for Web Performance Optimization', 'ml-web-performance', 'A comprehensive study on using machine learning algorithms to optimize web application performance and user experience.', '# Machine Learning Approach for Web Performance Optimization\n\n## Abstract\n\nThis research presents a novel approach to web performance optimization using machine learning algorithms. We developed predictive models that can automatically identify performance bottlenecks and suggest optimization strategies.\n\n## Introduction\n\nWeb performance is crucial for user experience and business success. Traditional optimization methods often rely on manual analysis and rule-based approaches, which can be time-consuming and may not capture complex performance patterns.\n\n## Methodology\n\nWe employed various ML algorithms including:\n- Random Forest for feature importance analysis\n- Support Vector Machines for classification\n- Neural Networks for pattern recognition\n- Gradient Boosting for prediction accuracy\n\n## Data Collection\n\nOur dataset consisted of:\n- 10,000+ web applications\n- Performance metrics from real user monitoring\n- Server-side performance data\n- Network latency measurements\n\n## Results\n\nOur approach showed significant improvements:\n- 40% reduction in page load times\n- 35% improvement in Core Web Vitals scores\n- 50% reduction in bounce rates\n- 25% increase in user engagement\n\n## Conclusion\n\nMachine learning can significantly enhance web performance optimization strategies by providing automated, data-driven insights that traditional methods cannot achieve.', '/placeholder.svg?height=300&width=500', true, 'journal', 'Stevano Wahyu Al\'fandi, Dr. John Smith, Prof. Sarah Johnson', 2024, 'International Journal of Web Technologies', '10.1000/182', '/research/ml-web-performance.pdf', 'https://doi.org/10.1000/182', 'machine learning, web performance, optimization, user experience, predictive modeling', 'A comprehensive study on using machine learning algorithms to optimize web application performance and user experience through predictive modeling and automated optimization techniques.'),

('Full-Stack Development Best Practices: A Comparative Study', 'fullstack-best-practices', 'Comparative analysis of modern full-stack development frameworks and their impact on development efficiency and application performance.', '# Full-Stack Development Best Practices: A Comparative Study\n\n## Abstract\n\nThis study compares various full-stack development approaches and their effectiveness in modern web application development. We analyzed popular frameworks and their impact on developer productivity and application performance.\n\n## Literature Review\n\nPrevious studies have shown that framework choice significantly impacts:\n- Development speed\n- Code maintainability\n- Application performance\n- Team collaboration\n\n## Research Methodology\n\nWe conducted experiments with:\n- React with Node.js\n- Vue.js with Express\n- Angular with NestJS\n- Next.js full-stack approach\n- Laravel with Vue.js\n\n## Evaluation Criteria\n\n### Performance Metrics\n- Bundle size\n- Runtime performance\n- Server response times\n- SEO capabilities\n\n### Developer Experience\n- Learning curve\n- Development speed\n- Debugging capabilities\n- Community support\n\n## Findings\n\n### Performance Results\n- Next.js showed superior SSR performance\n- React + Node.js had excellent flexibility\n- Laravel provided robust backend capabilities\n- Vue.js offered the gentlest learning curve\n\n### Development Efficiency\n- Next.js: 85% faster for SSR applications\n- React ecosystem: Most extensive third-party support\n- Laravel: Best for rapid prototyping\n- Angular: Superior for large enterprise applications\n\n## Recommendations\n\nBased on our findings:\n1. Use Next.js for SEO-critical applications\n2. Choose React + Node.js for maximum flexibility\n3. Consider Laravel for rapid development\n4. Select Angular for enterprise-scale projects\n\n## Conclusion\n\nThe choice of full-stack framework should align with project requirements, team expertise, and long-term maintenance considerations.', '/placeholder.svg?height=300&width=500', true, 'conference', 'Stevano Wahyu Al\'fandi, Prof. Jane Doe, Dr. Mike Johnson', 2024, 'International Conference on Software Engineering (ICSE 2024)', '10.1109/ICSE.2024.123', '/research/fullstack-study.pdf', 'https://ieeexplore.ieee.org/document/123456', 'full-stack development, web frameworks, performance analysis, React, Next.js, Vue.js, Angular, Laravel', 'Comparative analysis of modern full-stack development frameworks including React, Vue, Angular, and Next.js, focusing on development efficiency, performance metrics, and scalability factors.'),

('Database Optimization Strategies for Modern Web Applications', 'database-optimization-strategies', 'Research on advanced database optimization techniques for improving query performance in high-traffic web applications.', '# Database Optimization Strategies for Modern Web Applications\n\n## Abstract\n\nThis research investigates various database optimization strategies and their effectiveness in improving query performance for high-traffic web applications. We present comprehensive analysis and practical recommendations.\n\n## Problem Statement\n\nModern web applications face significant database performance challenges:\n- Increasing data volumes\n- Complex query requirements\n- High concurrent user loads\n- Real-time data processing needs\n\n## Literature Review\n\nExisting research has focused on:\n- Index optimization techniques\n- Query execution plan analysis\n- Caching strategies\n- Database sharding approaches\n\n## Methodology\n\nOur research methodology included:\n1. Performance baseline establishment\n2. Implementation of optimization strategies\n3. Load testing with realistic scenarios\n4. Performance measurement and analysis\n\n## Proposed Solutions\n\n### 1. Query Optimization\n- **Index Strategy**: Composite indexes for multi-column queries\n- **Query Rewriting**: Optimizing complex JOIN operations\n- **Execution Plan Analysis**: Using EXPLAIN for query optimization\n\n### 2. Caching Strategies\n- **Redis Implementation**: In-memory caching for frequently accessed data\n- **Application-level Caching**: Strategic caching at the application layer\n- **Database Query Caching**: MySQL query cache optimization\n\n### 3. Database Design Optimization\n- **Normalization vs Denormalization**: Strategic denormalization for read-heavy workloads\n- **Partitioning**: Horizontal partitioning for large tables\n- **Connection Pooling**: Efficient database connection management\n\n## Experimental Setup\n\n### Test Environment\n- MySQL 8.0 database server\n- Node.js application server\n- Redis cache layer\n- Load testing with Apache JMeter\n\n### Test Scenarios\n- 1,000 concurrent users\n- Mixed read/write operations\n- Complex analytical queries\n- Real-time data updates\n\n## Results\n\nOur optimization strategies resulted in:\n- **60% reduction** in average query execution time\n- **45% improvement** in concurrent user handling\n- **30% reduction** in server resource usage\n- **80% improvement** in cache hit rates\n\n### Detailed Performance Metrics\n\n| Metric | Before | After | Improvement |\n|--------|--------|-------|-------------|\n| Avg Query Time | 250ms | 100ms | 60% |\n| Concurrent Users | 500 | 725 | 45% |\n| CPU Usage | 80% | 56% | 30% |\n| Memory Usage | 75% | 60% | 20% |\n\n## Best Practices\n\nBased on our research, we recommend:\n\n1. **Index Management**\n   - Regular index analysis and optimization\n   - Removal of unused indexes\n   - Composite indexes for multi-column queries\n\n2. **Query Optimization**\n   - Use of prepared statements\n   - Avoiding N+1 query problems\n   - Efficient JOIN operations\n\n3. **Caching Strategy**\n   - Multi-layer caching approach\n   - Cache invalidation strategies\n   - Monitoring cache performance\n\n4. **Database Monitoring**\n   - Real-time performance monitoring\n   - Query performance analysis\n   - Resource usage tracking\n\n## Conclusion\n\nImplementing comprehensive database optimization strategies significantly improves web application performance. The combination of query optimization, strategic caching, and proper database design can result in substantial performance gains.\n\n## Future Work\n\nFuture research directions include:\n- Machine learning-based query optimization\n- Automated database tuning systems\n- Cloud-native database optimization strategies\n- Real-time performance adaptation algorithms', '/placeholder.svg?height=300&width=500', true, 'thesis', 'Stevano Wahyu Al\'fandi', 2023, 'Universitas Indonesia - Computer Science Department', null, '/research/database-optimization-thesis.pdf', null, 'database optimization, query performance, web applications, indexing, caching, MySQL, Redis, performance tuning', 'Comprehensive research on database optimization techniques including query optimization, indexing strategies, and caching mechanisms for improving performance in high-traffic web applications.'),

('Responsive Web Design Patterns: A User Experience Study', 'responsive-design-ux-study', 'Analysis of responsive web design patterns and their impact on user experience across different devices and screen sizes.', '# Responsive Web Design Patterns: A User Experience Study\n\n## Abstract\n\nThis study examines various responsive web design patterns and their effectiveness in providing optimal user experiences across different devices and screen sizes.\n\n## Introduction\n\nWith the proliferation of mobile devices, responsive web design has become essential for modern web applications. This research analyzes different design patterns and their impact on user engagement and satisfaction.\n\n## Methodology\n\nWe conducted user testing with 200 participants across different devices:\n- Desktop computers (1920x1080)\n- Tablets (768x1024)\n- Mobile phones (375x667)\n\n## Key Findings\n\n- Mobile-first design approach showed 35% better user engagement\n- Flexible grid systems improved content accessibility by 40%\n- Touch-friendly interfaces increased task completion rates by 50%\n\n## Conclusion\n\nResponsive design patterns significantly impact user experience, with mobile-first approaches showing the most promising results.', '/placeholder.svg?height=300&width=500', true, 'conference', 'Stevano Wahyu Al\'fandi, Dr. Lisa Chen', 2023, 'International Conference on Human-Computer Interaction', '10.1007/978-3-030-12345-6_78', '/research/responsive-design-study.pdf', 'https://link.springer.com/chapter/10.1007/978-3-030-12345-6_78', 'responsive design, user experience, mobile-first, web design patterns, usability', 'Analysis of responsive web design patterns and their impact on user experience across different devices, focusing on mobile-first design approaches and user engagement metrics.');

